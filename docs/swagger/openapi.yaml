openapi: 3.0.3
info:
  description: API to code scanning orchestration engine for Ocular
  title: Ocular API
  version: 0.0.0-beta.3
paths:
  /api/v1/crawlers:
    get:
      description: Get all crawlers
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Crawler'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Crawler'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - crawlers
  /api/v1/crawlers/{name}:
    delete:
      description: Removes a crawlers by name, if it exists
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - crawlers
    get:
      description: Get crawlers by {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Crawler'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Crawler'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - crawlers
    post:
      description: Creates or updates the crawlers with name {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crawler'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Crawler'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - crawlers
  /api/v1/downloaders:
    get:
      description: Get all downloaders
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Downloader'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Downloader'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - downloaders
  /api/v1/downloaders/{name}:
    delete:
      description: Removes a downloaders by name, if it exists
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - downloaders
    get:
      description: Get downloaders by {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Downloader'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Downloader'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - downloaders
    post:
      description: Creates or updates the downloaders with name {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downloader'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Downloader'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - downloaders
  /api/v1/pipelines:
    get:
      description: Gets all pipelines
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Pipeline'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Pipeline'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - pipelines
    post:
      description: Starts a new pipeline with the given request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PipelineRequest'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Pipeline'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Pipeline'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - pipelines
  /api/v1/pipelines/{id}:
    delete:
      description: Terminates a pipeline execution by ID, if it is running or pending
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - pipelines
    get:
      description: Gets a pipeline by ID
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Pipeline'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Pipeline'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - pipelines
  /api/v1/profiles:
    get:
      description: Get all profiles
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Profile'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Profile'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - profiles
  /api/v1/profiles/{name}:
    delete:
      description: Removes a profiles by name, if it exists
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - profiles
    get:
      description: Get profiles by {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Profile'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Profile'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - profiles
    post:
      description: Creates or updates the profiles with name {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - profiles
  /api/v1/scheduled/searches:
    get:
      description: Gets all scheduled searches
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/ScheduledSearch'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/ScheduledSearch'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - scheduled searches
    post:
      description: Schedules a new search to run at the given cron schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledSearchRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ScheduledSearchRequest'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/ScheduledSearch'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/ScheduledSearch'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - scheduled searches
  /api/v1/scheduled/searches/{id}:
    delete:
      description: Removes a scheduled search by ID, if it exists
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
  /api/v1/searches:
    get:
      description: Gets all searches
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Search'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Search'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - searches
    post:
      description: Starts a new search with the given request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Search'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Search'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - searches
  /api/v1/searches/{id}:
    delete:
      description: Terminates a search execution by ID, if it is running or pending
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - searches
    get:
      description: Gets a search by ID
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Search'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Search'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
  /api/v1/secrets:
    get:
      description: Get all secrets
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Secret'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Secret'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - secrets
  /api/v1/secrets/{name}:
    delete:
      description: Removes a secrets by name, if it exists
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - secrets
    post:
      description: Creates or updates the secrets with name {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - secrets
  /api/v1/uploaders:
    get:
      description: Get all uploaders
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Uploader'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/Uploader'
                    type: array
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - uploaders
  /api/v1/uploaders/{name}:
    delete:
      description: Removes a uploaders by name, if it exists
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - uploaders
    get:
      description: Get uploaders by {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Uploader'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/Uploader'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - uploaders
    post:
      description: Creates or updates the uploaders with name {name}
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uploader'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Uploader'
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      security:
      - BearerAuth: []
      tags:
      - uploaders
  /health:
    get:
      description: Health check endpoint
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      tags:
      - system
  /version:
    get:
      description: Health check endpoint
      responses:
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
        "200":
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/APIVersion'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
            application/x-yaml:
              schema:
                properties:
                  response:
                    $ref: '#/components/schemas/APIVersion'
                  success:
                    enum:
                    - true
                    type: boolean
                type: object
          description: ""
      tags:
      - system
components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            properties:
              error:
                description: Error response from API
                type: string
              success:
                enum:
                - false
                type: boolean
            type: object
        application/x-yaml:
          schema:
            properties:
              error:
                description: Error response from API
                type: string
              success:
                enum:
                - false
                type: boolean
            type: object
      description: Error response
  schemas:
    APIVersion:
      properties:
        buildTime:
          type: string
        commit:
          type: string
        version:
          type: string
      type: object
    Crawler:
      properties:
        args:
          items:
            type: string
          type: array
        command:
          items:
            type: string
          type: array
        env:
          items:
            $ref: '#/components/schemas/SchemasEnvVar'
          type: array
        image:
          type: string
        imagePullPolicy:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/SchemasParameterDefinition'
          description: Parameters that can be passed to the container. They will be
            passed as environment variables.
          pattern: ^[A-Z][A-Z0-9_]*$
          type: object
        secrets:
          items:
            $ref: '#/components/schemas/SchemasSecretRef'
          type: array
      type: object
    Downloader:
      properties:
        args:
          items:
            type: string
          type: array
        command:
          items:
            type: string
          type: array
        env:
          items:
            $ref: '#/components/schemas/SchemasEnvVar'
          type: array
        image:
          type: string
        imagePullPolicy:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/SchemasSecretRef'
          type: array
      type: object
    NoParams:
      properties:
        NoParams:
          type: boolean
      type: object
    Pipeline:
      properties:
        ID:
          $ref: '#/components/schemas/UuidUUID'
        profile:
          description: The profile to use for the pipeline execution.
          type: string
        scanStatus:
          $ref: '#/components/schemas/SchemasRunStatus'
        target:
          $ref: '#/components/schemas/SchemasTarget'
        uploadStatus:
          $ref: '#/components/schemas/SchemasRunStatus'
      type: object
    PipelineRequest:
      properties:
        profileName:
          type: string
        target:
          $ref: '#/components/schemas/SchemasTarget'
      type: object
    Profile:
      properties:
        artifacts:
          description: A list of paths to the artifacts that will be produced by the
            scanners. These paths are relative to the results directory.
          items:
            type: string
          nullable: true
          type: array
        scanners:
          description: A list of scanners that will be run over the target.
          items:
            $ref: '#/components/schemas/SchemasUserContainer'
          nullable: true
          type: array
        uploaders:
          description: A list of uploaders that will be used to upload the results
            of the scanners. An uploader will be passed each of the artifacts as command
            line arguments, prefixed by the argument '--'. Each UploaderRunRequest
            must specify the name of the uploader and any parameters that are required.
          items:
            $ref: '#/components/schemas/SchemasUploaderRunRequest'
          nullable: true
          type: array
      type: object
    ScheduledSearch:
      properties:
        crawlerName:
          description: The name of the crawler to run.
          example: example-crawler
          type: string
        id:
          $ref: '#/components/schemas/UuidUUID'
        parameters:
          additionalProperties:
            type: string
          description: The parameters to pass to the pipeline execution.
          type: object
        schedule:
          description: The cron schedule that the pipeline will run against.
          example: 0 0 * * *
          type: string
      type: object
    ScheduledSearchRequest:
      properties:
        crawlerName:
          type: string
        parameters:
          additionalProperties:
            type: string
          nullable: true
          type: object
        schedule:
          type: string
      type: object
    SchemasEnvVar:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    SchemasParameterDefinition:
      properties:
        default:
          type: string
        description:
          description: Description of the parameter.
          type: string
        required:
          description: Will mark the parameter as required. If true, the executuon
            will fail to start if the parameter is not provided.
          type: boolean
      type: object
    SchemasRunStatus:
      description: The status of the run.
      enum:
      - Pending
      - Running
      - Success
      - Failure
      - Cancelled
      - Error
      - Unknown
      - NotRan
      minimum: 0
      type: string
    SchemasSecretRef:
      properties:
        mountTarget:
          description: Target path for the secret mount. If mountType is envVar, this
            is the environment variable name. If mountType is file, this is the file
            path where the secret will be mounted.
          type: string
        mountType:
          description: Type of mount for the secret, either envVar or file.
          enum:
          - envVar
          - file
          type: string
        name:
          description: Name of the secret to reference.
          type: string
        required:
          description: Whether the secret is required. If true, the application will
            fail to start if the secret is not found.
          type: boolean
      type: object
    SchemasTarget:
      properties:
        downloader:
          type: string
        identifier:
          type: string
        version:
          type: string
      type: object
    SchemasUploaderRunRequest:
      properties:
        name:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
      type: object
    SchemasUserContainer:
      properties:
        args:
          items:
            type: string
          type: array
        command:
          items:
            type: string
          type: array
        env:
          items:
            $ref: '#/components/schemas/SchemasEnvVar'
          type: array
        image:
          type: string
        imagePullPolicy:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/SchemasSecretRef'
          type: array
      type: object
    Search:
      properties:
        crawlerName:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        runID:
          $ref: '#/components/schemas/UuidUUID'
        status:
          $ref: '#/components/schemas/SchemasRunStatus'
      type: object
    SearchRequest:
      properties:
        crawlerName:
          type: string
        parameters:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    Secret: {}
    Uploader:
      properties:
        args:
          items:
            type: string
          type: array
        command:
          items:
            type: string
          type: array
        env:
          items:
            $ref: '#/components/schemas/SchemasEnvVar'
          type: array
        image:
          type: string
        imagePullPolicy:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/SchemasParameterDefinition'
          description: Parameters that can be passed to the container. They will be
            passed as environment variables.
          pattern: ^[A-Z][A-Z0-9_]*$
          type: object
        secrets:
          items:
            $ref: '#/components/schemas/SchemasSecretRef'
          type: array
      type: object
    UserContainer:
      properties:
        args:
          items:
            type: string
          type: array
        command:
          items:
            type: string
          type: array
        env:
          items:
            $ref: '#/components/schemas/SchemasEnvVar'
          type: array
        image:
          type: string
        imagePullPolicy:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/SchemasSecretRef'
          type: array
      type: object
    UuidUUID:
      example: 248df4b7-aa70-47b8-a036-33ac447e668d
      format: uuid
      type: string
  securitySchemes:
    BearerAuth:
      bearerFormat: jwt
      description: Bearer authentication using JWT tokens
      scheme: bearer
      type: http
