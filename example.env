# This is an example environment file for Ocular
# This file should be copied to `.env` and modified as needed.
# When running commands via `make`, this file will be sourced
# and configure the environment for the commands.
# NOTE: any file in the root of the repo starting with `.env`
# is ignored. You are encouraged to have different env files of the form `.env.<name>`.
# Setting the environment variable `OCULAR_ENV_FILE` to the name of the file
# will allow you to use that file instead of `.env`.
# Default values are shown commented out, but set via the Makefile.

## Sets the environment file to use in Make
## NOTE: this should be set in your shell before running `make`
OCULAR_ENV_FILE=.env.prod

## Sets the environment name for Ocular.
## Valid values are `development`, `staging`, and `production`.
OCULAR_ENVIRONMENT=development

## The image tag to use for all docker images.
## This is used both when building, and to use in image references in the cluster.
OCULAR_IMAGE_TAG=latest

## The image registry to use for Ocular images.
## This is used both when building, and to use in image references in the cluster.
OCULAR_IMAGE_REGISTRY=ghcr.io

## Pull policy for images in the cluster.
OCULAR_IMAGE_PULL_POLICY=IfNotPresent

## Sets the logging level for Ocular.
## Can be one of `debug`, `info`, `warn`, `error`, or `fatal`.
## Either all lower case or all upper case is accepted.
OCULAR_LOGGING_LEVEL=info

## Secrets to use to pull images from registries.
## Comma-separated list of secret names.
# OCULAR_IMAGE_PULL_SECRETS=secretName1,secretName2

## Sets the API host for Ocular.
## This is used by pods running in the cluster to communicate with the Ocular API.
## When running locally, this should be set to `host.docker.internal` to allow
## the pods to communicate with the API running on the host machine. If running
## in a cluster, this should be taken care of by Helm.
OCULAR_API_HOST=host.docker.internal

## Sets the API port for Ocular.
OCULAR_API_PORT=3001

## Sets the GitHub token used in development
## This is used to pull private images from GitHub Container Registry.
# OCULAR_GITHUB_TOKEN=

## Enable ingress when deploying Ocular via HELM
## If true, will use the OCULAR_API_HOST for the ingress host.
# OCULAR_HELM_ENABLE_INGRESS=

## Set the class name for helm ingress.
# OCULAR_HELM_INGRESS_CLASS_NAME=

## Enable TLS when deploying Ocular via HELM
# OCULAR_HELM_ENABLE_TLS=false

## Sets additional helm value files to use when deploying Ocular via HELM.
## NOTE: any file in the root of the repo ending with `.override.yaml` will be ignored by git.
# OCULAR_HELM_VALUE_FILES=env1.yaml,env2.yaml

## Maximum number of jobs to allow to run in parallel.
# OCULAR_MAX_JOBS=50

## Sets the image repository for the Ocular API server.
# OCULAR_API_SERVER_IMAGE_REPOSITORY=crashappsec/ocular-api-server

## Sets the image repository for the Ocular API server.
# OCULAR_EXTRACTOR_IMAGE_REPOSITORY=crashappsec/ocular-extractor

## Sets the image repository for the default Ocular crawler.
# OCULAR_DEFAULT_CRAWLER_IMAGE_REPOSITORY=crashappsec/ocular-default-crawler

## Sets the image repository for the default Ocular downloader.
# OCULAR_DEFAULT_DOWNLOADER_IMAGE_REPOSITORY=crashappsec/ocular-default-downloader

## Sets the image repository for the default Ocular uploader.
# OCULAR_DEFAULT_UPLOADER_IMAGE_REPOSITORY=crashappsec/ocular-default-uploader

## Sets the Job TTL for Ocular jobs.
# OCULAR_RUNTIME_JOBTTL=2m30s

## Sets the service account for scanner jobs to use
# OCULAR_RUNTIME_SCANNERSSERVICEACCOUNT=ocular-scanners-sa

## Sets the service account for crawler jobs to use
# OCULAR_RUNTIME_CRAWLERSSERVICEACCOUNT=ocular-crawlers-sa

## Sets the service account for uploader jobs to use
# OCULAR_RUNTIME_UPLOADERSSERVICEACCOUNT=ocular-uploaders-sa

## Sets the configmap for each of the storage types
# OCULAR_PROFILE_CONFIGMAPNAME=ocular-profiles
# OCULAR_CRAWLERS_CONFIGMAPNAME=ocular-crawlers
# OCULAR_UPLOADERS_CONFIGMAPNAME=ocular-uploaders
# OCULAR_DOWNLOADERS_CONFIGMAPNAME=ocular-downloaders
## Or the secret name for the Ocular secrets.
# OCULAR_SECRETS_SECRETNAME=ocular-secrets

## Sets the service account to use when generating token
# OCULAR_SERVICE_ACCOUNT=ocular-admin

## Sets the labels for all Ocular resources.
# OCULAR_GLOBAL_LABELS=app=ocular,environment=development

## ------------------------- ##
## Non-Ocular useful variables ##
## ------------------------- ##

## Sets the default platform for Docker to use
## for building and running images.
# DOCKER_DEFAULT_PLATFORM=linux/amd64

## Sets the kube config file to use for kubectl commands.
# KUBECONFIG=/my/custom/kubeconfig
