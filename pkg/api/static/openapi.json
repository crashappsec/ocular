{
  "openapi": "3.0.3",
  "info": {
    "title": "Ocular API",
    "description": "API to code scanning orchestration engine for Ocular",
    "version": "0.0.0-beta.3"
  },
  "paths": {
    "/api/v1/crawlers": {
      "get": {
        "tags": [
          "crawlers"
        ],
        "description": "Get all crawlers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Crawler"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Crawler"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/crawlers/{name}": {
      "delete": {
        "tags": [
          "crawlers"
        ],
        "description": "Removes a crawlers by name, if it exists",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "crawlers"
        ],
        "description": "Get crawlers by {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Crawler"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Crawler"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "crawlers"
        ],
        "description": "Creates or updates the crawlers with name {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Crawler"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/Crawler"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/downloaders": {
      "get": {
        "tags": [
          "downloaders"
        ],
        "description": "Get all downloaders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Downloader"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Downloader"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/downloaders/{name}": {
      "delete": {
        "tags": [
          "downloaders"
        ],
        "description": "Removes a downloaders by name, if it exists",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "downloaders"
        ],
        "description": "Get downloaders by {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Downloader"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Downloader"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "downloaders"
        ],
        "description": "Creates or updates the downloaders with name {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Downloader"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/Downloader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "description": "Gets all pipelines",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "description": "Starts a new pipeline with the given request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineRequest"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/PipelineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Pipeline"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Pipeline"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/pipelines/{id}": {
      "delete": {
        "tags": [
          "pipelines"
        ],
        "description": "Terminates a pipeline execution by ID, if it is running or pending",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "description": "Gets a pipeline by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Pipeline"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Pipeline"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profiles": {
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get all profiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Profile"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Profile"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profiles/{name}": {
      "delete": {
        "tags": [
          "profiles"
        ],
        "description": "Removes a profiles by name, if it exists",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "profiles"
        ],
        "description": "Get profiles by {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Profile"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Profile"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "description": "Creates or updates the profiles with name {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/scheduled/searches": {
      "get": {
        "tags": [
          "scheduled searches"
        ],
        "description": "Gets all scheduled searches",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/ScheduledSearch"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/ScheduledSearch"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "scheduled searches"
        ],
        "description": "Schedules a new search to run at the given cron schedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledSearchRequest"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/ScheduledSearch"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/ScheduledSearch"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/scheduled/searches/{id}": {
      "delete": {
        "description": "Removes a scheduled search by ID, if it exists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/searches": {
      "get": {
        "tags": [
          "searches"
        ],
        "description": "Gets all searches",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Search"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Search"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "searches"
        ],
        "description": "Starts a new search with the given request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Search"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Search"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/searches/{id}": {
      "delete": {
        "tags": [
          "searches"
        ],
        "description": "Terminates a search execution by ID, if it is running or pending",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "description": "Gets a search by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Search"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Search"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/secrets": {
      "get": {
        "tags": [
          "secrets"
        ],
        "description": "Get all secrets",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Secret"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Secret"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/secrets/{name}": {
      "delete": {
        "tags": [
          "secrets"
        ],
        "description": "Removes a secrets by name, if it exists",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "secrets"
        ],
        "description": "Creates or updates the secrets with name {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Secret"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/Secret"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/uploaders": {
      "get": {
        "tags": [
          "uploaders"
        ],
        "description": "Get all uploaders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Uploader"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Uploader"
                      }
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/uploaders/{name}": {
      "delete": {
        "tags": [
          "uploaders"
        ],
        "description": "Removes a uploaders by name, if it exists",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "uploaders"
        ],
        "description": "Get uploaders by {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Uploader"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/Uploader"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "uploaders"
        ],
        "description": "Creates or updates the uploaders with name {name}",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Uploader"
              }
            },
            "application/x-yaml": {
              "schema": {
                "$ref": "#/components/schemas/Uploader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "system"
        ],
        "description": "Health check endpoint",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "system"
        ],
        "description": "Health check endpoint",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/APIVersion"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              },
              "application/x-yaml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "$ref": "#/components/schemas/APIVersion"
                    },
                    "success": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "5XX": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIVersion": {
        "type": "object",
        "properties": {
          "buildTime": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Crawler": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasEnvVar"
            }
          },
          "image": {
            "type": "string"
          },
          "imagePullPolicy": {
            "type": "string"
          },
          "parameters": {
            "pattern": "^[A-Z][A-Z0-9_]*$",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SchemasParameterDefinition"
            },
            "description": "Parameters that can be passed to the container. They will be passed as environment variables."
          },
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasSecretRef"
            }
          }
        }
      },
      "Downloader": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasEnvVar"
            }
          },
          "image": {
            "type": "string"
          },
          "imagePullPolicy": {
            "type": "string"
          },
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasSecretRef"
            }
          }
        }
      },
      "NoParams": {
        "type": "object",
        "properties": {
          "NoParams": {
            "type": "boolean"
          }
        }
      },
      "Pipeline": {
        "type": "object",
        "properties": {
          "ID": {
            "$ref": "#/components/schemas/UuidUUID"
          },
          "profile": {
            "type": "string",
            "description": "The profile to use for the pipeline execution."
          },
          "scanStatus": {
            "$ref": "#/components/schemas/SchemasRunStatus"
          },
          "target": {
            "$ref": "#/components/schemas/SchemasTarget"
          },
          "uploadStatus": {
            "$ref": "#/components/schemas/SchemasRunStatus"
          }
        }
      },
      "PipelineRequest": {
        "type": "object",
        "properties": {
          "profileName": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/SchemasTarget"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "artifacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of paths to the artifacts that will be produced by the scanners. These paths are relative to the results directory.",
            "nullable": true
          },
          "scanners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasUserContainer"
            },
            "description": "A list of scanners that will be run over the target.",
            "nullable": true
          },
          "uploaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasUploaderRunRequest"
            },
            "description": "A list of uploaders that will be used to upload the results of the scanners. An uploader will be passed each of the artifacts as command line arguments, prefixed by the argument '--'. Each UploaderRunRequest must specify the name of the uploader and any parameters that are required.",
            "nullable": true
          }
        }
      },
      "ScheduledSearch": {
        "type": "object",
        "properties": {
          "crawlerName": {
            "type": "string",
            "description": "The name of the crawler to run.",
            "example": "example-crawler"
          },
          "id": {
            "$ref": "#/components/schemas/UuidUUID"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The parameters to pass to the pipeline execution."
          },
          "schedule": {
            "type": "string",
            "description": "The cron schedule that the pipeline will run against.",
            "example": "0 0 * * *"
          }
        }
      },
      "ScheduledSearchRequest": {
        "type": "object",
        "properties": {
          "crawlerName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "SchemasEnvVar": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SchemasParameterDefinition": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Description of the parameter."
          },
          "required": {
            "type": "boolean",
            "description": "Will mark the parameter as required. If true, the executuon will fail to start if the parameter is not provided."
          }
        }
      },
      "SchemasRunStatus": {
        "minimum": 0,
        "enum": [
          "Pending",
          "Running",
          "Success",
          "Failure",
          "Cancelled",
          "Error",
          "Unknown",
          "NotRan"
        ],
        "type": "string",
        "description": "The status of the run."
      },
      "SchemasSecretRef": {
        "type": "object",
        "properties": {
          "mountTarget": {
            "type": "string",
            "description": "Target path for the secret mount. If mountType is envVar, this is the environment variable name. If mountType is file, this is the file path where the secret will be mounted."
          },
          "mountType": {
            "enum": [
              "envVar",
              "file"
            ],
            "type": "string",
            "description": "Type of mount for the secret, either envVar or file."
          },
          "name": {
            "type": "string",
            "description": "Name of the secret to reference."
          },
          "required": {
            "type": "boolean",
            "description": "Whether the secret is required. If true, the application will fail to start if the secret is not found."
          }
        }
      },
      "SchemasTarget": {
        "type": "object",
        "properties": {
          "downloader": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "SchemasUploaderRunRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SchemasUserContainer": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasEnvVar"
            }
          },
          "image": {
            "type": "string"
          },
          "imagePullPolicy": {
            "type": "string"
          },
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasSecretRef"
            }
          }
        }
      },
      "Search": {
        "type": "object",
        "properties": {
          "crawlerName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "runID": {
            "$ref": "#/components/schemas/UuidUUID"
          },
          "status": {
            "$ref": "#/components/schemas/SchemasRunStatus"
          }
        }
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "crawlerName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "Secret": {},
      "Uploader": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasEnvVar"
            }
          },
          "image": {
            "type": "string"
          },
          "imagePullPolicy": {
            "type": "string"
          },
          "parameters": {
            "pattern": "^[A-Z][A-Z0-9_]*$",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SchemasParameterDefinition"
            },
            "description": "Parameters that can be passed to the container. They will be passed as environment variables."
          },
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasSecretRef"
            }
          }
        }
      },
      "UserContainer": {
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasEnvVar"
            }
          },
          "image": {
            "type": "string"
          },
          "imagePullPolicy": {
            "type": "string"
          },
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemasSecretRef"
            }
          }
        }
      },
      "UuidUUID": {
        "type": "string",
        "format": "uuid",
        "example": "248df4b7-aa70-47b8-a036-33ac447e668d"
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error response from API"
                },
                "success": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              }
            }
          },
          "application/x-yaml": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error response from API"
                },
                "success": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "jwt",
        "description": "Bearer authentication using JWT tokens"
      }
    }
  }
}