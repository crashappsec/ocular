// Copyright (C) 2025 Crash Override, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the FSF, either version 3 of the License, or (at your option) any later version.
// See the LICENSE file in the root of this repository for full license text or
// visit: <https://www.gnu.org/licenses/gpl-3.0.html>.
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/crashappsec/ocular/api/v1beta1"
	apiv1beta1 "github.com/crashappsec/ocular/pkg/generated/clientset/typed/api/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeCrawlers implements CrawlerInterface
type fakeCrawlers struct {
	*gentype.FakeClientWithList[*v1beta1.Crawler, *v1beta1.CrawlerList]
	Fake *FakeApiV1beta1
}

func newFakeCrawlers(fake *FakeApiV1beta1, namespace string) apiv1beta1.CrawlerInterface {
	return &fakeCrawlers{
		gentype.NewFakeClientWithList[*v1beta1.Crawler, *v1beta1.CrawlerList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("crawlers"),
			v1beta1.SchemeGroupVersion.WithKind("Crawler"),
			func() *v1beta1.Crawler { return &v1beta1.Crawler{} },
			func() *v1beta1.CrawlerList { return &v1beta1.CrawlerList{} },
			func(dst, src *v1beta1.CrawlerList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.CrawlerList) []*v1beta1.Crawler { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.CrawlerList, items []*v1beta1.Crawler) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
