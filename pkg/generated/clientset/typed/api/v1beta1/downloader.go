// Copyright (C) 2025 Crash Override, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the FSF, either version 3 of the License, or (at your option) any later version.
// See the LICENSE file in the root of this repository for full license text or
// visit: <https://www.gnu.org/licenses/gpl-3.0.html>.
// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	context "context"

	apiv1beta1 "github.com/crashappsec/ocular/api/v1beta1"
	scheme "github.com/crashappsec/ocular/pkg/generated/clientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DownloadersGetter has a method to return a DownloaderInterface.
// A group's client should implement this interface.
type DownloadersGetter interface {
	Downloaders(namespace string) DownloaderInterface
}

// DownloaderInterface has methods to work with Downloader resources.
type DownloaderInterface interface {
	Create(ctx context.Context, downloader *apiv1beta1.Downloader, opts v1.CreateOptions) (*apiv1beta1.Downloader, error)
	Update(ctx context.Context, downloader *apiv1beta1.Downloader, opts v1.UpdateOptions) (*apiv1beta1.Downloader, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, downloader *apiv1beta1.Downloader, opts v1.UpdateOptions) (*apiv1beta1.Downloader, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*apiv1beta1.Downloader, error)
	List(ctx context.Context, opts v1.ListOptions) (*apiv1beta1.DownloaderList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *apiv1beta1.Downloader, err error)
	DownloaderExpansion
}

// downloaders implements DownloaderInterface
type downloaders struct {
	*gentype.ClientWithList[*apiv1beta1.Downloader, *apiv1beta1.DownloaderList]
}

// newDownloaders returns a Downloaders
func newDownloaders(c *ApiV1beta1Client, namespace string) *downloaders {
	return &downloaders{
		gentype.NewClientWithList[*apiv1beta1.Downloader, *apiv1beta1.DownloaderList](
			"downloaders",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *apiv1beta1.Downloader { return &apiv1beta1.Downloader{} },
			func() *apiv1beta1.DownloaderList { return &apiv1beta1.DownloaderList{} },
		),
	}
}
